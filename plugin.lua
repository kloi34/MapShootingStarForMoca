-- MapShootingStarForMoca
-- horrendous jank code for moca
---------------------------------------------------------------------------------------------------
-- Global constants
---------------------------------------------------------------------------------------------------

SAMELINE_SPACING = 5                   -- value determining spacing between GUI items on the same row
DEFAULT_WIDGET_HEIGHT = 26             -- value determining the height of GUI widgets
BUTTON_WIDGET_WIDTH = 60               -- value determining the width of buttons

SHOOTING_STAR_MAP = {{1,290,0},{2,458,0},{4,626,0},{3,626,0},{1,626,0},{3,793,0},{3,1129,1465},{4,1465,0},{2,1633,0},{1,1801,0},{2,1968,2136},{3,2136,0},{4,2472,2808},{1,3143,0},{2,3311,0},{3,3479,0},{3,3647,0},{3,3815,4151},{2,4151,0},{4,4318,0},{3,4486,0},{2,4654,4822},{3,4822,0},{1,5158,5326},{4,5493,0},{3,5661,0},{2,5829,6165},{3,6165,6501},{4,6501,6836},{3,6836,0},{2,7004,0},{1,7172,0},{2,7340,7508},{3,7508,0},{3,7844,8179},{4,8515,0},{3,8683,0},{2,8851,0},{1,9019,0},{1,9186,9522},{2,9522,0},{3,9690,0},{4,9858,0},{4,10026,10361},{4,10697,11201},{4,11369,0},{1,11369,0},{3,11369,0},{3,11536,0},{1,11620,0},{2,11704,0},{4,11788,0},{3,11872,0},{2,11956,0},{4,12040,0},{3,12124,0},{1,12208,0},{4,12292,0},{3,12376,0},{2,12460,0},{1,12544,0},{2,12628,0},{3,12712,0},{4,12795,0},{2,12879,0},{1,12963,0},{4,13047,0},{3,13131,0},{2,13215,0},{1,13299,0},{4,13383,0},{3,13467,0},{2,13551,0},{1,13635,0},{2,13719,0},{4,13803,0},{3,13887,0},{2,13970,0},{1,14054,0},{3,14138,0},{2,14222,0},{1,14306,0},{2,14390,0},{3,14474,0},{4,14558,0},{1,14642,0},{2,14726,0},{3,14810,0},{4,14894,0},{1,14978,0},{2,15062,0},{3,15146,0},{4,15229,0},{3,15313,0},{2,15397,0},{1,15481,0},{4,15565,0},{3,15649,0},{2,15733,0},{1,15817,0},{4,15901,0},{3,15985,0},{1,16069,0},{2,16153,0},{3,16237,0},{4,16321,0},{1,16404,0},{2,16488,0},{3,16572,0},{4,16656,0},{3,16740,0},{2,16824,0},{4,16908,0},{3,16992,0},{2,17076,0},{1,17160,0},{3,17244,0},{2,17328,0},{1,17412,0},{2,17496,0},{3,17580,0},{4,17663,0},{1,17747,0},{2,17831,0},{3,17915,0},{4,17999,0},{1,18083,0},{2,18167,0},{3,18251,0},{4,18335,0},{1,18419,0},{2,18503,0},{3,18587,0},{4,18671,0},{1,18755,0},{2,18838,0},{3,18922,0},{4,19006,0},{3,19090,0},{2,19174,0},{1,19258,0},{4,19342,0},{3,19426,0},{2,19510,0},{4,19594,0},{3,19678,0},{2,19762,0},{1,19846,0},{2,19930,0},{3,20014,0},{4,20097,0},{1,20181,0},{2,20265,0},{3,20349,0},{4,20433,0},{1,20517,0},{2,20601,0},{3,20685,0},{4,20769,0},{3,20853,0},{2,20937,0},{1,21021,0},{3,21105,0},{2,21189,0},{1,21272,0},{2,21356,0},{3,21440,0},{4,21524,0},{2,21608,0},{3,21692,0},{4,21776,0},{2,21860,0},{3,21944,0},{4,22028,0},{1,22112,0},{2,22112,0},{3,22112,0},{4,22280,0},{2,22447,0},{3,22447,0},{1,22615,0},{4,22615,0},{2,22783,0},{1,22783,0},{3,22951,0},{4,22951,0},{4,23119,0},{1,23119,0},{2,23287,0},{3,23455,0},{4,23455,0},{2,23623,0},{3,23623,0},{1,23790,0},{4,23790,0},{3,23958,0},{2,24126,0},{1,24126,0},{4,24294,0},{3,24462,0},{2,24462,0},{1,24630,0},{2,24798,0},{4,24798,0},{3,24965,0},{2,25133,0},{1,25133,0},{4,25301,0},{3,25301,0},{1,25469,0},{3,25469,0},{2,25637,0},{3,25805,0},{4,25805,0},{1,25973,0},{2,26140,0},{3,26140,0},{4,26308,0},{1,26476,0},{2,26476,0},{3,26644,0},{4,26644,0},{4,26812,0},{1,26812,0},{3,26980,0},{2,27148,0},{1,27148,0},{3,27315,0},{4,27315,0},{2,27483,0},{1,27483,0},{4,27651,0},{3,27819,0},{1,27819,0},{2,27987,0},{4,27987,0},{1,28155,0},{4,28155,0},{3,28323,0},{2,28491,0},{1,28491,0},{4,28658,0},{3,28826,0},{2,28826,0},{1,28994,0},{4,28994,0},{4,29162,0},{3,29162,0},{2,29330,0},{1,29498,0},{4,29498,0},{3,29666,0},{2,29833,0},{1,29833,0},{4,30001,0},{1,30001,0},{3,30169,0},{2,30169,0},{1,30337,0},{3,30505,0},{4,30505,0},{2,30673,0},{3,30673,0},{1,30841,0},{4,30841,0},{3,31008,0},{2,31176,0},{1,31176,0},{4,31344,0},{1,31512,0},{2,31512,0},{3,31680,0},{4,31848,0},{1,31848,0},{2,32016,0},{3,32016,0},{3,32183,0},{4,32183,0},{2,32351,0},{1,32351,0},{4,32435,0},{3,32435,0},{2,32519,0},{1,32519,0},{3,32687,0},{4,32687,0},{3,32855,0},{1,32855,0},{2,32855,0},{2,33023,0},{3,33191,0},{4,33191,0},{2,33358,0},{1,33358,0},{1,33526,0},{4,33526,0},{3,33694,0},{2,33862,0},{1,33862,0},{4,34030,0},{3,34198,0},{2,34198,0},{1,34366,0},{3,34366,0},{2,34534,0},{4,34534,0},{3,34701,0},{1,34701,0},{4,34869,0},{1,34869,0},{3,35037,0},{2,35205,0},{1,35205,0},{4,35373,0},{3,35541,0},{2,35541,0},{4,35709,0},{2,35876,0},{1,35876,0},{4,36044,0},{3,36044,0},{3,36212,0},{2,36212,0},{1,36380,0},{4,36548,0},{3,36548,0},{2,36716,0},{1,36884,0},{4,36884,0},{3,37051,0},{2,37219,0},{1,37219,0},{4,37387,0},{3,37387,0},{3,37555,0},{2,37555,0},{1,37723,0},{3,37891,0},{4,37891,0},{2,38059,0},{1,38059,0},{4,38226,0},{3,38226,0},{2,38394,0},{1,38562,0},{3,38562,0},{4,38730,0},{2,38730,0},{1,38898,0},{3,38898,0},{2,39066,0},{4,39234,0},{1,39234,0},{2,39402,0},{3,39569,0},{4,39569,0},{1,39737,0},{4,39737,0},{2,39905,0},{3,39905,0},{4,40073,0},{1,40073,0},{1,40241,0},{2,40241,0},{3,40409,0},{1,40577,0},{4,40577,0},{2,40744,0},{3,40912,0},{4,40912,0},{1,41080,0},{3,41248,0},{4,41248,0},{2,41416,0},{1,41416,0},{4,41584,0},{1,41584,0},{3,41752,0},{1,41919,0},{2,41919,0},{4,42087,0},{3,42255,0},{2,42255,0},{1,42423,0},{4,42591,0},{3,42591,0},{2,42759,0},{1,42759,0},{1,42927,0},{2,42927,0},{3,43094,0},{4,43094,0},{1,43178,0},{2,43178,0},{3,43262,0},{4,43262,0},{4,43430,0},{3,43430,0},{2,43598,0},{1,43598,0},{3,43598,0},{2,44269,0},{3,44269,0},{4,44269,0},{3,44605,0},{2,44605,0},{1,44605,0},{1,44941,0},{4,44941,0},{2,44941,0},{3,45109,0},{2,45109,0},{2,45277,0},{1,45277,0},{4,45277,0},{4,45445,0},{1,45445,0},{2,45612,0},{3,45612,0},{4,45612,0},{2,45780,0},{3,45780,0},{4,45948,0},{2,45948,0},{1,45948,0},{3,46116,0},{1,46116,0},{3,46284,0},{2,46284,0},{4,46284,0},{2,46452,0},{3,46452,0},{4,46620,0},{3,46620,0},{1,46620,0},{4,46787,0},{2,46787,0},{1,46955,0},{4,46955,0},{2,46955,0},{2,47123,0},{3,47123,0},{3,47291,0},{4,47291,0},{1,47291,0},{1,47459,0},{4,47459,0},{2,47543,0},{3,47543,0},{1,47627,0},{4,47627,0},{2,47795,0},{4,47795,0},{3,47962,0},{4,47962,0},{1,47962,0},{2,48130,0},{3,48130,0},{4,48298,0},{3,48298,0},{1,48298,0},{3,48466,0},{2,48466,0},{1,48634,0},{2,48634,0},{4,48634,0},{2,48802,0},{4,48802,0},{1,48970,0},{4,48970,0},{2,48970,0},{3,49137,0},{2,49137,0},{2,49305,0},{1,49305,0},{4,49305,0},{4,49473,0},{1,49473,0},{2,49641,0},{3,49641,0},{4,49641,0},{4,49809,0},{2,49809,0},{3,49977,0},{2,49977,0},{1,49977,0},{3,50145,0},{2,50145,0},{4,50145,0},{1,50313,0},{2,50313,0},{4,50313,0},{2,50480,0},{3,50480,0},{4,50648,0},{3,50648,0},{1,50648,0},{3,50816,0},{1,50816,0},{1,50984,0},{4,50984,0},{2,50984,0},{2,51152,0},{3,51152,0},{3,51320,0},{4,51320,0},{1,51320,0},{1,51488,0},{4,51488,0},{3,51655,0},{2,51655,0},{1,51655,0},{1,51823,0},{4,51823,0},{3,51991,0},{2,51991,0},{1,51991,0},{2,52159,0},{4,52159,0},{4,52327,0},{3,52327,0},{1,52327,0},{3,52495,0},{2,52495,0},{1,52663,0},{2,52663,0},{4,52663,0},{3,52830,0},{4,52830,0},{2,52914,0},{1,52914,0},{3,52998,0},{4,52998,0},{4,53166,0},{1,53166,0},{2,53334,0},{3,53334,0},{4,53334,0},{1,53502,0},{3,53502,0},{1,53670,0},{2,53670,0},{4,53670,0},{4,53838,0},{3,53838,0},{3,54005,0},{2,54005,0},{1,54005,0},{4,54173,54341},{2,54173,0},{3,54341,0},{2,54341,0},{1,54341,0},{1,54509,54677},{3,54509,0},{4,54677,0},{3,54677,0},{2,54677,0},{3,54845,0},{2,54845,0},{4,54929,0},{1,54929,0},{2,55013,0},{3,55013,0},{1,55180,0},{2,55180,0},{3,55264,0},{4,55264,0},{2,55348,0},{1,55348,0},{3,55516,0},{4,55516,0},{2,55684,0},{1,55684,0},{3,55684,0},{2,55852,0},{4,55852,0},{1,56020,0},{4,56020,0},{2,56020,0},{3,56188,0},{2,56188,0},{2,56356,0},{1,56356,0},{4,56356,0},{4,56523,0},{1,56523,0},{2,56691,0},{3,56691,0},{4,56691,0},{4,56859,0},{1,56859,0},{3,57027,0},{2,57027,0},{1,57027,0},{3,57195,0},{2,57195,0},{4,57279,0},{1,57279,0},{2,57363,0},{3,57363,0},{2,57531,0},{3,57531,0},{4,57698,0},{3,57698,0},{1,57698,0},{3,57866,0},{2,57866,0},{1,58034,0},{4,58034,0},{2,58034,0},{2,58202,0},{3,58202,0},{1,58286,0},{4,58286,0},{3,58370,0},{2,58370,0},{1,58538,0},{4,58538,0},{3,58706,0},{2,58706,0},{1,58706,0},{3,58873,0},{4,58873,0},{3,59041,0},{2,59041,0},{1,59041,0},{2,59209,0},{3,59209,0},{4,59377,0},{3,59377,0},{1,59377,0},{3,59545,0},{2,59545,0},{1,59713,0},{2,59713,0},{4,59713,0},{2,59881,0},{4,59881,0},{1,60048,0},{4,60048,0},{2,60048,0},{3,60216,0},{2,60216,0},{2,60384,0},{1,60384,0},{4,60384,0},{4,60552,0},{1,60552,0},{2,60720,0},{3,60720,0},{4,60720,0},{3,60888,0},{2,60888,0},{1,60888,0},{3,61056,0},{4,61056,0},{1,61056,0},{2,61224,0},{4,61224,0},{1,61391,0},{2,61391,0},{3,61391,0},{2,61559,0},{3,61559,0},{4,61727,0},{3,61727,0},{1,61727,0},{3,61895,0},{1,61895,0},{1,62063,0},{4,62063,0},{2,62063,0},{2,62231,0},{3,62231,0},{3,62399,0},{4,62399,0},{1,62399,0},{4,62566,0},{2,62566,0},{3,62734,0},{2,62734,0},{1,62734,0},{3,62902,0},{4,62902,0},{3,63070,0},{2,63070,0},{1,63070,0},{2,63238,0},{4,63238,0},{4,63406,0},{3,63406,0},{1,63406,0},{3,63574,0},{2,63574,0},{1,63657,0},{4,63657,0},{2,63741,0},{3,63741,0},{3,63909,0},{4,63909,0},{2,64077,0},{1,64077,0},{3,64077,0},{4,64245,0},{1,64245,0},{2,64413,0},{3,64413,0},{4,64413,0},{1,64581,0},{3,64581,0},{1,64749,0},{2,64749,0},{4,64749,0},{4,64916,0},{3,64916,0},{3,65084,0},{2,65084,0},{1,65084,0},{2,65252,0},{4,65252,0},{3,65420,0},{2,65420,0},{1,65420,0},{1,65588,0},{4,65588,0},{2,65672,0},{3,65672,0},{4,65756,0},{1,65756,0},{2,65924,0},{3,65924,0},{1,66008,0},{4,66008,0},{2,66091,0},{3,66091,0},{4,66175,0},{2,66259,0},{1,66259,0},{3,66343,0},{4,66427,0},{2,66427,0},{3,66511,0},{1,66595,0},{2,66595,0},{4,66679,0},{3,66763,0},{2,66763,0},{1,66763,0},{4,66847,0},{2,66931,0},{3,66931,0},{1,67015,0},{3,67099,0},{4,67099,0},{1,67183,0},{4,67267,0},{2,67267,0},{3,67350,0},{4,67434,0},{2,67434,0},{1,67434,0},{3,67518,0},{2,67602,0},{1,67602,0},{4,67686,0},{3,67770,0},{1,67770,0},{2,67854,0},{3,67938,0},{4,67938,0},{1,68022,0},{2,68106,0},{3,68106,0},{4,68106,0},{1,68190,0},{4,68274,0},{2,68274,0},{3,68358,0},{2,68442,0},{1,68442,0},{3,68525,0},{2,68609,0},{4,68609,0},{1,68693,0},{4,68777,0},{2,68777,0},{3,68777,0},{1,68861,0},{2,68945,0},{4,68945,0},{3,69029,0},{1,69029,0},{2,69113,0},{4,69113,0},{3,69197,0},{4,69281,0},{1,69281,0},{2,69365,0},{3,69449,0},{4,69449,0},{1,69449,0},{2,69533,0},{4,69617,0},{3,69617,0},{1,69701,0},{2,69784,0},{3,69784,0},{4,69868,0},{3,69952,0},{1,69952,0},{2,70036,0},{3,70120,0},{4,70120,0},{1,70120,0},{2,70204,0},{3,70288,0},{1,70288,0},{4,70372,0},{2,70456,0},{3,70456,0},{4,70540,0},{3,70624,0},{1,70624,0},{2,70708,0},{1,70792,0},{4,70792,0},{3,70792,0},{2,70876,0},{1,70959,0},{4,70959,0},{3,71043,0},{4,71127,0},{2,71127,0},{1,71211,0},{2,71295,0},{3,71295,0},{4,71379,0},{1,71463,0},{3,71463,0},{2,71463,0},{4,71547,0},{3,71631,0},{1,71631,0},{4,71715,0},{1,71799,0},{2,71799,0},{3,71799,0},{4,71883,0},{3,71967,0},{1,71967,0},{2,72051,0},{1,72134,0},{3,72134,0},{4,72134,0},{2,72218,0},{3,72302,0},{4,72302,0},{2,72386,0},{3,72470,0},{1,72470,0},{2,72554,0},{3,72638,0},{4,72638,0},{1,72722,0},{2,72806,0},{4,72806,0},{3,72806,0},{1,72890,0},{3,72974,0},{2,72974,0},{4,73058,0},{1,73142,0},{2,73142,0},{4,73226,0},{2,73310,0},{3,73310,0},{1,73393,0},{2,73477,0},{3,73477,0},{4,73477,0},{1,73561,0},{4,73645,0},{2,73645,0},{3,73729,0},{4,73813,0},{1,73813,0},{3,73897,0},{4,73981,0},{2,73981,0},{1,74065,0},{4,74149,0},{3,74149,0},{2,74149,0},{1,74317,0},{2,74317,0},{3,74401,0},{4,74401,0},{2,74485,0},{1,74485,0},{4,74820,0},{2,74820,0},{1,74988,0},{3,74988,0},{3,75156,0},{4,75156,0},{1,75156,0},{4,75324,0},{2,75324,0},{3,75660,0},{4,75660,0},{2,75660,0},{3,75995,0},{4,75995,0},{2,75995,0},{3,77170,0},{4,77170,0},{1,77170,0},{2,77254,0},{1,77338,0},{4,77338,0},{3,77422,0},{4,77506,0},{2,77506,0},{1,77506,0},{3,77590,0},{1,77674,0},{2,77674,0},{4,77758,0},{2,77842,0},{3,77842,0},{1,77926,0},{3,78010,0},{4,78010,0},{2,78094,0},{3,78178,0},{4,78178,0},{1,78178,0},{2,78261,0},{1,78345,0},{3,78345,0},{4,78429,0},{3,78513,0},{2,78513,0},{1,78597,0},{4,78681,0},{2,78681,0},{3,78765,0},{2,78849,0},{4,78849,0},{1,78849,0},{3,78933,0},{4,79017,0},{2,79017,0},{3,79101,0},{1,79185,0},{2,79185,0},{3,79269,0},{2,79353,0},{4,79353,0},{1,79436,0},{3,79520,0},{2,79520,0},{4,79520,0},{1,79604,0},{4,79688,0},{3,79688,0},{2,79772,0},{3,79856,0},{1,79856,0},{4,79940,0},{3,80024,0},{2,80024,0},{1,80108,0},{4,80192,0},{3,80192,0},{2,80192,0},{1,80276,0},{2,80360,0},{3,80360,0},{4,80444,0},{3,80528,0},{2,80528,0},{1,80612,0},{2,80695,0},{4,80695,0},{3,80779,0},{2,80863,0},{4,80863,0},{1,80863,0},{3,80947,0},{2,81031,0},{1,81031,0},{4,81115,0},{1,81199,0},{3,81199,0},{2,81283,0},{4,81367,0},{3,81367,0},{2,81451,0},{3,81535,0},{1,81535,0},{4,81535,0},{2,81619,0},{1,81703,0},{4,81703,0},{2,81787,0},{3,81870,0},{4,81870,0},{1,81954,0},{2,82038,0},{4,82038,0},{1,82122,0},{2,82206,0},{4,82206,0},{3,82206,0},{1,82290,0},{3,82374,0},{4,82374,0},{2,82458,0},{1,82542,0},{4,82542,0},{3,82542,0},{2,82626,0},{1,82710,0},{4,82710,0},{3,82794,0},{2,82878,0},{1,82878,0},{4,82878,0},{3,82962,0},{1,83045,0},{4,83045,0},{3,83129,0},{2,83213,0},{1,83213,0},{4,83297,0},{1,83381,0},{3,83381,0},{2,83465,0},{4,83549,0},{1,83549,0},{3,83549,0},{2,83633,0},{1,83717,0},{3,83717,0},{4,83801,0},{2,83885,0},{3,83885,0},{1,83969,0},{3,84053,0},{4,84053,0},{2,84137,0},{3,84221,0},{4,84221,0},{1,84221,0},{2,84304,0},{1,84388,0},{4,84388,0},{3,84472,0},{2,84556,0},{4,84556,0},{3,84640,0},{2,84724,0},{1,84724,0},{3,84808,0},{2,84892,0},{1,84892,0},{4,84892,0},{3,84976,0},{2,85060,0},{4,85060,0},{1,85144,0},{3,85228,0},{4,85228,0},{2,85228,0},{1,85312,0},{2,85396,0},{3,85396,0},{4,85479,0},{2,85563,0},{3,85563,0},{1,85563,0},{4,85647,0},{2,85731,0},{3,85731,0},{1,85815,0},{4,85899,0},{2,85899,0},{3,85983,0},{4,86067,0},{2,86067,0},{1,86151,0},{2,86235,0},{3,86235,0},{4,86235,0},{1,86319,0},{2,86403,0},{4,86403,0},{3,86487,0},{1,86571,0},{2,86571,0},{3,86655,0},{1,86738,0},{4,86738,0},{2,86822,0},{4,86906,0},{1,86906,0},{3,86906,0},{2,86990,0},{3,87074,0},{4,87074,0},{2,87158,0},{1,87158,0},{3,87242,0},{4,87242,0},{1,87410,0},{2,87410,0},{3,87494,0},{4,87494,0},{1,87578,0},{2,87578,0},{3,87746,0},{2,87746,0},{2,87913,0},{4,87913,0},{1,87913,0},{3,87997,0},{2,88081,0},{4,88081,0},{1,88165,0},{4,88249,0},{2,88249,0},{1,88333,0},{3,88417,0},{4,88417,0},{2,88501,0},{4,88585,0},{3,88585,0},{1,88669,0},{3,88753,0},{2,88753,0},{1,88837,0},{4,88921,0},{3,88921,0},{2,88921,0},{1,89005,0},{2,89089,0},{4,89089,0},{3,89172,0},{4,89256,0},{2,89256,0},{1,89340,0},{3,89424,0},{4,89424,0},{2,89508,0},{1,89592,0},{4,89592,0},{3,89592,0},{2,89676,0},{1,89760,0},{3,89760,0},{2,89844,0},{4,89928,0},{3,89928,0},{2,90012,0},{3,90096,0},{1,90096,0},{4,90180,0},{3,90264,0},{2,90264,0},{1,90264,0},{4,90347,0},{3,90431,0},{1,90431,0},{2,90515,0},{4,90599,0},{3,90599,0},{2,90683,0},{3,90767,0},{1,90767,0},{2,90851,0},{3,90935,0},{4,90935,0},{1,90935,0},{2,91019,0},{4,91103,0},{3,91103,0},{1,91187,0},{4,91271,0},{2,91271,0},{3,91271,0},{1,91355,0},{3,91439,0},{2,91439,0},{4,91523,0},{2,91606,0},{3,91606,0},{1,91606,0},{4,91690,0},{2,91774,0},{3,91774,0},{1,91858,0},{2,91942,0},{4,91942,0},{1,92026,0},{2,92110,0},{3,92110,0},{4,92194,0},{2,92278,0},{3,92278,0},{1,92278,0},{4,92362,0},{1,92446,0},{3,92446,0},{2,92530,0},{1,92614,0},{3,92614,0},{4,92698,0},{3,92781,0},{2,92781,0},{1,92865,0},{2,92949,0},{4,92949,0},{3,93033,0},{1,93117,0},{2,93117,0},{4,93201,0},{1,93285,0},{2,93285,0},{3,93285,0},{4,93369,0},{1,93453,0},{2,93453,0},{3,93537,0},{4,93621,0},{1,93621,0},{2,93621,0},{3,93705,0},{2,93789,0},{4,93789,0},{3,93873,0},{1,93956,0},{2,93956,0},{4,94040,0},{2,94124,0},{3,94124,0},{1,94208,0},{3,94292,0},{2,94292,0},{4,94292,0},{1,94376,0},{2,94460,0},{4,94460,0},{3,94544,0},{2,94628,0},{1,94628,0},{4,94712,0},{1,94796,0},{3,94796,0},{2,94880,0},{4,94964,0},{1,94964,0},{3,94964,0},{2,95048,0},{1,95132,0},{4,95132,0},{2,95215,0},{4,95299,0},{3,95299,0},{2,95383,0},{3,95467,0},{1,95467,0},{4,95551,0},{1,95635,0},{3,95635,0},{2,95635,0},{4,95719,0},{3,95803,0},{2,95803,0},{1,95887,0},{4,95971,0},{2,95971,0},{3,96055,0},{1,96139,0},{4,96139,0},{2,96223,0},{1,96307,0},{3,96307,0},{4,96307,0},{2,96390,0},{4,96474,0},{1,96474,0},{2,96558,0},{4,96642,0},{3,96642,0},{2,96726,0},{1,96810,0},{3,96810,0},{2,96894,0},{1,96978,0},{4,96978,0},{3,96978,0},{2,97062,0},{4,97146,0},{3,97146,0},{1,97230,0},{2,97314,97356},{3,97314,97356},{3,97482,97524},{2,97482,97524},{2,97649,97691},{3,97649,97691},{2,97817,97859},{3,97817,97859},{2,97985,98027},{1,97985,98027},{3,98069,98111},{4,98069,98111},{2,98153,98195},{1,98153,98195},{3,98237,98279},{4,98237,98279},{2,98321,98363},{1,98321,98363},{3,98405,98447},{4,98405,98447},{2,98489,98531},{1,98489,98531},{3,98573,98615},{4,98573,98615},{2,98657,98699}}

SHOOTING_STAR_BPM = 178.71876525878906
SHOOTING_STAR_START = 290

---------------------------------------------------------------------------------------------------
-- Plugin and GUI
---------------------------------------------------------------------------------------------------

-- Creates the plugin window
function draw()
    applyStyle()
    menu()
end

-- Configures GUI visual settings
function applyStyle()
    -- Plugin Styles
    local rounding = 5
    
    imgui.PushStyleVar( imgui_style_var.WindowPadding,      { 8, 8 } )
    imgui.PushStyleVar( imgui_style_var.FramePadding,       { 8, 5 }   )
    imgui.PushStyleVar( imgui_style_var.ItemSpacing,        { DEFAULT_WIDGET_HEIGHT / 2 - 1, 4 })
    imgui.PushStyleVar( imgui_style_var.ItemInnerSpacing,   { SAMELINE_SPACING, 6 })
    imgui.PushStyleVar( imgui_style_var.WindowBorderSize,   0          )
    imgui.PushStyleVar( imgui_style_var.WindowRounding,     rounding   )
    imgui.PushStyleVar( imgui_style_var.FrameRounding,      rounding   )
end

-- Creates the plugin menu
function menu()
    imgui.Begin("sus", imgui_window_flags.AlwaysAutoResize)
    state.IsWindowHovered = imgui.IsWindowHovered()
    vars = {
        stage = 0,
        number1 = 0,
        number2 = 0,
        message = "",
        slider = 0,
        count = 0
    }
    retrieveStateVariables(vars)
   
    if vars.stage == 5 then
        if imgui.Button("Download Fortnite 2") then
        mapShootingStar()
        vars = {
            stage = 0,
            number1 = 0,
            number2 = 0,
            message = "succsfuly donloded fornit 2",
            slider = 0,
            count = 0
        }
        vars.stage = 0
        end
    end
   
    if vars.stage == 4 then
        imgui.Text("[RECAPTCHA] Confirm that you are not a robot")
        spacing()
        imgui.Text("Do amogus cardswipe:")
        _, vars.slider = imgui.SliderInt("", vars.slider, 0, 10)
        if imgui.Button("Confirm Cardswipe") then
            if vars.slider == 10 then
                vars.slider = 0
                vars.count = vars.count + 1
            end
        end
        if vars.count > 0 and vars.count < 6 then
            if vars.count % 2 == 0 then
                vars.message = "TOO FAST, TRY AGAIN"
            else
                vars.message = "TOO SLOW, TRY AGAIN"
            end
        elseif vars.count == 6 then
            vars.stage = 5
        end
        imgui.TextWrapped(vars.message)
    end
      
    if vars.stage == 3 then
        imgui.TextWrapped("According to all known laws of aviation, there is no way a bee should be able to fly. Its wings are too small to get its fat little body off the ground. The bee, of course, flies anyway because bees don't care what humans think is impossible. Yellow, black. Yellow, black. Yellow, black. Yellow, black. Ooh, black and yellow! Let's shake it up a little. Barry! Breakfast is ready! Coming! Hang on a second. Hello? Barry? Adam? Can you believe this is happening? I can't. I'll pick you up. Looking sharp. Use the stairs. Your father paid good money for those. Sorry. I'm excited. Here's the graduate. We're very proud of you, son. A perfect report card, all B's. Very proud. Ma! I got a thing going here. You got lint on your fuzz. Ow! That's me! Wave to us! We'll be in row 118,000. Bye! Barry, I told you, stop flying in the house! Hey, Adam. Hey, Barry. Is that fuzz gel? A little. Special day, graduation. Never thought I'd make it. Three days grade school, three days high school. Those were awkward. Three days college. I'm glad I took a day and hitchhiked around the hive. You did come back different. Hi, Barry. Artie, growing a mustache? Looks good.Hear about Frankie? Yeah. You going to the funeral? No, I'm not going. Everybody knows, sting someone, you die. Don't waste it on a squirrel. Such a hothead. I guess he could have just gotten out of the way. I love this incorporating an amusement park into our day. That's why we don't need vacations. Boy, quite a bit of pomp...under the circumstances. Well, Adam, today we are men. We are! Bee-men. Amen! Hallelujah! Students, faculty, distinguished bees, please welcome Dean Buzzwell. Welcome, New Hive City graduating class of......9:15. That concludes our ceremonies. And begins your career at Honex Industries! Will we pick ourjob today? I heard it's just orientation. Heads up! Here we go. Keep your hands and antennas inside the tram at all times Wonder what it'll be like? A little scary.")
        if imgui.Button("                                     Accept Terms and conditions                                  ") then
            vars.stage = 4
        end
    end
    
    if vars.stage == 2 then
        imgui.Text("please enter your credit card information to continue with your purchase")
        _, vars.number1 = imgui.InputInt("Credit Card Number", vars.number1)
        _, vars.number2 = imgui.InputInt("3 digits on the back of the card", vars.number2)
        if imgui.Button("Confirm Card Number") then
            if ((vars.number2 > -1000 and vars.number2 <= -100) or (vars.number2 < 1000 and vars.number2 >= 100))
                    and (vars.number1 > 100 or vars.number1 < -100) then
                vars.stage = 3
                vars.message = ""
                
            else
                vars.message = "please enter EXACTLY 3 DIGITS for the numbers on the back of the card and the right amound of digits for the credit card"
            end
        end
        imgui.TextWrapped(vars.message)
    end
    
    if vars.stage == 1 then
        imgui.Button("Map Shooting Star")
        imgui.Text("Sorry, this button only works exclusively for Quaver PREMIUM members" )
        imgui.Text("Buy Quaver PREMIUM today for a limited time offer of only 100 £")
        separator()
        spacing()
        if imgui.Button("Buy Quaver PREMIUM") then
            vars.stage = 2
        end
    end
    
    if vars.stage == 0 then
        if imgui.Button("Map Shooting Star") then
            vars.stage = 1
            vars.message = ""
        end
        imgui.TextWrapped(vars.message)
    end
    
    saveStateVariables(vars)
    imgui.End()
end

function mapShootingStar()
    local currentShootingStarOffset = SHOOTING_STAR_START
    local currentMapOffset = state.SongTime
    local hitObjectsToPlace = {}
    for i = 1, #SHOOTING_STAR_MAP do
        note = SHOOTING_STAR_MAP[i]
        while (currentShootingStarOffset < note[2] - 1) do
            currentShootingStarOffset = currentShootingStarOffset + 60000/SHOOTING_STAR_BPM/12
            currentMapOffset = currentMapOffset + 60000/map.GetTimingPointAt(currentMapOffset).Bpm/12
        end
        local currentMapEndTime = currentMapOffset
        local tempEndShootingStarOffset = currentShootingStarOffset
        if note[3] ~= 0 then
            while (tempEndShootingStarOffset < note[3] - 1) do
                tempEndShootingStarOffset = tempEndShootingStarOffset + 60000/SHOOTING_STAR_BPM/12
                currentMapEndTime = currentMapEndTime + 60000/map.GetTimingPointAt(currentMapEndTime).Bpm/12
            end
        else
            currentMapEndTime = 0
        end
        table.insert(hitObjectsToPlace, utils.CreateHitObject(math.floor(currentMapOffset + 0.5), note[1], currentMapEndTime))
    end
    actions.PlaceHitObjectBatch(hitObjectsToPlace)
end

-- Retrieves variables from the state
-- Parameters
--    variables : table that contains variables and values (Table)
function retrieveStateVariables(variables)
    for key, value in pairs(variables) do
        variables[key] = state.GetValue(key) or value
    end
end

-- Saves variables to the state
-- Parameters
--    variables : table that contains variables and values (Table)
function saveStateVariables(variables)
    for key, value in pairs(variables) do
        state.SetValue(key, value)
    end
end

-- Adds a thin horizontal line separator on the GUI
function separator()
    spacing()
    imgui.Separator()
end

-- Adds vertical blank space on the GUI
function spacing()
    imgui.Dummy({0, 1})
end
